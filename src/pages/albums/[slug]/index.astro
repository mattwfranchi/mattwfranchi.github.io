---
import { type CollectionEntry, getCollection } from "astro:content";
import Albums from "@layouts/Albums.astro";
import AlbumDetails from "@layouts/AlbumDetails.astro";
import getSortedAlbums from "@utils/getSortedAlbums";
import getPageNumbers from "@utils/getPageNumbers";
import getPagination from "@utils/getPagination";

export interface Props {
  album: CollectionEntry<"albums">;
}

export async function getStaticPaths() {
  const albums = await getCollection("albums", ({ data }) => !data.draft);
  const photos = await getCollection("photos");

  const albumResult = albums.map(album => ({
    params: { slug: album.slug },
    props: { 
      album,
      photos: photos.filter(photo => photo.data.albumId === album.slug)
    },
  }));

  const pagePaths = getPageNumbers(albums.length).map(pageNum => ({
    params: { slug: String(pageNum) },
  }));

  return [...albumResult, ...pagePaths];
}

const { slug } = Astro.params;
const { album, photos } = Astro.props;

const albums = await getCollection("albums");
const sortedAlbums = getSortedAlbums(albums);
const pagination = getPagination({
  posts: sortedAlbums,
  page: slug,
});
---
<div class="pt-24 bg-gradient-to-b from-gray-900 to-gray-800 min-h-screen"> 
  {album ? <AlbumDetails album={album} photos={photos} /> : <Albums {...pagination} />}
</div>