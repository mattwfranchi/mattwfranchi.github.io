/* Main whiteboard container */
.whiteboard-container,
.transform-container {
  position: fixed;
  top: 50%;
  left: 50%;
  width: var(--window-width);
  height: var(--window-height);
  transform: translate(-50%, -50%) translate3d(var(--translateX, 0), var(--translateY, 0), 0) scale(var(--scale, 1));
  transform-origin: center center;
  z-index: 1;
  contain: size;
}

.whiteboard-container.is-transitioning,
.transform-container.is-transitioning {
  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.whiteboard-content {
  position: relative;
  width: 100%;
  height: 100%;
  contain: size;
  z-index: 3;
}

/* Sticky note positioning */
.draggable-area {
  position: absolute;
  transform-origin: center center;
  transform: translate(-50%, -50%) translate3d(var(--item-x, 0px), var(--item-y, 0px), 0) rotate(var(--item-rotation, 0deg));
  z-index: var(--item-z, 1);
  width: var(--item-width, 280px);
  height: var(--item-height, 320px);
  top: 50%;
  left: 50%;
}

.draggable-area .sticky-note {
  position: relative;
  width: 100%;
  height: 100%;
}

.draggable-area:active {
  cursor: grabbing;
}

/* Sticky Note Styles */
.sticky-note {
  position: relative;
  padding: 1rem;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 4px;
  box-shadow: 
    0 4px 6px rgba(0, 0, 0, 0.1),
    0 8px 12px rgba(0, 0, 0, 0.1),
    0 -1px 2px rgba(255, 255, 255, 0.1);
  transform-style: preserve-3d;
  transform-origin: top center;
  animation: flutter-in-wind var(--flutter-duration, 8s) ease-in-out infinite;
  will-change: transform;
  backface-visibility: hidden;
  perspective: 1000px;
  transition: 
    width 0.3s cubic-bezier(0.34, 1.56, 0.64, 1),
    height 0.3s cubic-bezier(0.34, 1.56, 0.64, 1),
    transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
}

/* Card content wrapper */
.sticky-note-content {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  z-index: 1;
  transform-style: preserve-3d;
}

/* Flutter Animations */
@keyframes flutter-in-wind {
  0%, 100% {
    transform: rotateX(0deg) rotateY(0deg) translateZ(0);
    box-shadow: 
      0 4px 6px rgba(0, 0, 0, 0.1),
      0 8px 12px rgba(0, 0, 0, 0.1);
  }
  25% {
    transform: rotateX(15deg) rotateY(-3deg) translateZ(5px);
    box-shadow: 
      0 14px 16px rgba(0, 0, 0, 0.15),
      0 18px 22px rgba(0, 0, 0, 0.1);
  }
  50% {
    transform: rotateX(25deg) rotateY(3deg) translateZ(10px);
    box-shadow: 
      0 18px 20px rgba(0, 0, 0, 0.18),
      0 22px 26px rgba(0, 0, 0, 0.12);
  }
  75% {
    transform: rotateX(10deg) rotateY(-2deg) translateZ(7px);
    box-shadow: 
      0 12px 14px rgba(0, 0, 0, 0.12),
      0 16px 20px rgba(0, 0, 0, 0.1);
  }
}

@keyframes flutter-intense {
  0%, 100% {
    transform: rotateX(0deg) translateZ(0);
  }
  50% {
    transform: rotateX(30deg) translateZ(15px);
  }
}

@keyframes flutter-gentle {
  0%, 100% {
    transform: rotateX(0deg) translateZ(0);
  }
  50% {
    transform: rotateX(15deg) translateZ(8px);
  }
}

@keyframes flutter-subtle {
  0%, 100% {
    transform: rotateX(0deg) translateZ(0);
  }
  50% {
    transform: rotateX(8deg) translateZ(4px);
  }
}

/* Sticky note modifications */
.sticky-note.is-resized {
  width: 150%;
  height: 150%;
  animation-play-state: paused;
  z-index: 100;
}

.sticky-note.is-interacting {
  animation-play-state: paused !important;
  transition: 
    width 0.3s cubic-bezier(0.34, 1.56, 0.64, 1),
    height 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
  box-shadow: 
    0 4px 6px rgba(0, 0, 0, 0.1),
    0 8px 12px rgba(0, 0, 0, 0.1),
    0 -1px 2px rgba(255, 255, 255, 0.1);
}

.sticky-note.is-transitioning-size {
  animation-play-state: paused !important;
}

/* Performance optimization classes - used by the performance.ts utils */
.paused-animation {
  animation-play-state: paused !important;
  transition: none !important;
}

.simplified-animation {
  animation: none !important;
  transform: none !important;
  transform-style: flat !important;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1) !important;
}

/* Performance mode classes - these match the ones in performance.ts */
.perf-medium .sticky-note {
  animation-duration: calc(var(--flutter-duration, 8s) * 1.5) !important;
}

.perf-low .sticky-note {
  animation-duration: calc(var(--flutter-duration, 8s) * 2) !important;
}

.simplify-effects .sticky-note {
  transform-style: flat !important;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1) !important;
}

.disable-animations .sticky-note {
  animation: none !important;
  transform: none !important;
}

/* Pause animations during transitions to improve performance */
.is-transitioning .sticky-note {
  animation-play-state: paused !important;
}

/* Mobile optimizations */
.mobile-optimized .sticky-note {
  /* Disable 3D transforms on mobile for better performance */
  transform-style: flat;
  backface-visibility: visible;
  perspective: none;
  will-change: auto;
  /* Disable animations on mobile */
  animation: none !important;
}

.mobile-optimized .transform-container,
.mobile-optimized .whiteboard-container {
  /* Split the translate3d into separate transforms for better mobile performance */
  transform: translate(-50%, -50%) translateX(var(--translateX, 0)) translateY(var(--translateY, 0)) scale(var(--scale, 1));
  contain: size;
}

.mobile-optimized .whiteboard-content {
  /* Remove will-change which can be memory-intensive on mobile */
  will-change: auto;
  contain: size;
}

/* Enhanced Mobile Optimizations */
.mobile-optimized .transform-container,
.mobile-optimized .whiteboard-container {
  /* More aggressive performance optimizations */
  contain: strict;
  content-visibility: auto;
  will-change: none;
  /* Eliminate 3D effects completely */
  transform: translate(-50%, -50%) translate(var(--translateX, 0), var(--translateY, 0)) scale(var(--scale, 1));
  /* Simpler transition */
  transition: transform 0.2s ease;
}

.mobile-optimized .whiteboard-content {
  contain: strict;
  content-visibility: auto;
  will-change: none;
}

.mobile-optimized .sticky-note {
  /* Completely eliminate 3D transforms */
  transform: none !important;
  transform-style: flat !important;
  backface-visibility: visible !important;
  perspective: none !important;
  will-change: none !important;
  
  /* Disable all animations */
  animation: none !important;
  transition: none !important;
  
  /* Simplify rendering with flat colors */
  background: #fffbe6 !important;
  box-shadow: none !important;
}

/* Make draggable area render more efficiently */
.mobile-optimized .draggable-area {
  contain: strict;
  will-change: none;
  /* Simplify transform */
  transform: translate(-50%, -50%) translate(var(--item-x, 0px), var(--item-y, 0px)) rotate(var(--item-rotation, 0deg)) !important;
}

/* Apply GPU memory optimization for off-screen content */
@media (max-width: 768px) {
  .draggable-area:not(:focus-within):not(:hover) {
    content-visibility: auto;
  }
  
  /* Reduce sticky note complexity even more on very small screens */
  @media (max-width: 480px) {
    .mobile-optimized .sticky-note {
      border: 1px solid #ddd !important;
    }
  }
}

/* Enhanced etched content styling */
.sticky-note.etched-content {
  box-shadow: 
    0 4px 6px rgba(0, 0, 0, 0.12),
    0 8px 12px rgba(0, 0, 0, 0.15),
    inset 0 1px 3px rgba(255, 255, 255, 0.3),
    inset 0 -1px 2px rgba(0, 0, 0, 0.05);
  border: 1px solid rgba(0, 0, 0, 0.1);
}

/* Target all inner elements to remove backgrounds */
.sticky-note.etched-content * {
  background-color: transparent !important;
  border-color: rgba(0, 0, 0, 0.2) !important;
  box-shadow: none !important;
}

/* Force container backgrounds to be transparent */
.sticky-note.etched-content .rounded-lg,
.sticky-note.etched-content .bg-gray-900,
.sticky-note.etched-content .bg-gray-800,
.sticky-note.etched-content .bg-blue-900,
.sticky-note.etched-content .bg-zinc-900,
.sticky-note.etched-content [class*="bg-"] {
  background-color: transparent !important;
  backdrop-filter: none !important;
  box-shadow: none !important;
}

/* Remove any padding that might be causing separation */
.sticky-note.etched-content .p-2,
.sticky-note.etched-content .p-3,
.sticky-note.etched-content .p-4 {
  background: transparent !important;
  box-shadow: none !important;
}

/* Change text colors for the etched look */
.etched-text {
  color: rgba(0, 0, 0, 0.8);
  text-shadow: 0 1px 1px rgba(255, 255, 255, 0.3);
}

/* Override text colors that were previously light on dark backgrounds */
.etched-text .text-white,
.etched-text .text-gray-100,
.etched-text .text-gray-200,
.etched-text .text-blue-100,
.etched-text .text-blue-200,
.etched-text .text-cyan-100,
.etched-text .text-cyan-200,
.etched-text [class*="text-"] {
  color: rgba(0, 0, 0, 0.8) !important;
  text-shadow: 0 1px 1px rgba(255, 255, 255, 0.3) !important;
}

.etched-text h1, .etched-text h2, .etched-text h3 {
  color: rgba(0, 0, 0, 0.9) !important;
  text-shadow: 0 1px 1px rgba(255, 255, 255, 0.4);
}

.etched-text p, .etched-text span {
  text-shadow: 0 1px 1px rgba(255, 255, 255, 0.3);
}

/* Style buttons to look etched into the note */
.etched-button {
  background-color: rgba(0, 0, 0, 0.1) !important;
  border: 1px solid rgba(0, 0, 0, 0.15) !important;
  box-shadow: 
    inset 0 1px 1px rgba(0, 0, 0, 0.2) !important;
}

.etched-button svg {
  color: rgba(0, 0, 0, 0.7) !important;
}

/* Remove indentation for card content to create truly flat etched appearance */
.sticky-note.etched-content .rounded-lg,
.sticky-note.etched-content div[class*="rounded"],
.sticky-note.etched-content div[class*="p-"] {
  box-shadow: none !important;
  border: none !important;
  border-radius: 0 !important;
}

/* Add subtle lines to show structure without using backgrounds */
.sticky-note.etched-content .rounded-lg,
.sticky-note.etched-content div[class*="rounded"] {
  border-bottom: 1px solid rgba(0, 0, 0, 0.1) !important;
  margin-bottom: 0.5rem;
}

/* Transitions pause */
.isTransitioning .sticky-note {
  animation-play-state: paused;
}

/* Media queries for responsive design and performance optimization */
@media (max-width: 1200px) {
  .sticky-note:not(.is-interacting):not(:hover) {
    animation-duration: calc(var(--flutter-duration, 8s) * 1.5) !important;
  }
}

@media (prefers-reduced-motion), (max-width: 768px) {
  .sticky-note:not(.is-interacting):not(:hover) {
    animation-duration: calc(var(--flutter-duration, 8s) * 2) !important;
    transform-style: flat !important;
  }
}

